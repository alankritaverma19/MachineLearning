import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import seaborn as sns

data = {
    'X1': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'X2': [10, 9, 8, 7, 6, 5, 4, 3, 2, 1],
    'X3': [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    'Y': [5, 4, 6, 7, 9, 10, 11, 12, 13, 15]
}
df = pd.DataFrame(data)

X = df[['X1', 'X2', 'X3']]  
Y = df['Y']  

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train, Y_train)

Y_pred = model.predict(X_test)

print("Coefficients (weights):", model.coef_)
print("Intercept:", model.intercept_)

r2 = r2_score(Y_test, Y_pred)
mse = mean_squared_error(Y_test, Y_pred)

print(f"R-squared: {r2}")
print(f"Mean Squared Error: {mse}")

plt.figure(figsize=(8, 6))
plt.scatter(Y_test, Y_pred, color='blue')
plt.plot([min(Y_test), max(Y_test)], [min(Y_test), max(Y_test)], color='red')  # Ideal line
plt.xlabel("True Values")
plt.ylabel("Predictions")
plt.title("True vs Predicted Values")
plt.show()

sns.heatmap(df.corr(), annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Matrix")
plt.show()
